<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sp.net.dao.impl.OrderDetailDaoImpl">
	<sql id="table"> tb_order_detail </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.sp.net.entity.OrderDetail">
		<result column="D_ID" property="did" jdbcType="VARCHAR"/>
		<result column="O_ID" property="oid" jdbcType="VARCHAR"/>
		<result column="S_ID" property="sid" jdbcType="VARCHAR"/>
		<result column="DIAMETRE" property="diametre" jdbcType="DOUBLE"/>
		<result column="PRICE" property="price" jdbcType="DOUBLE"/>
		<result column="STEEL_CATEGORY" property="steelCategory" jdbcType="VARCHAR"/>
		<result column="LENGTH" property="length" jdbcType="DOUBLE"/>
		<result column="COUNT" property="count" jdbcType="INTEGER"/>
		<result column="WEIGHT" property="weight" jdbcType="DOUBLE"/>
		<result column="TOTAL_PRICE" property="totalPrice" jdbcType="DOUBLE"/>
		<result column="STATE" property="state" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		D_ID,
		O_ID,
		S_ID,
		DIAMETRE,
		PRICE,
		STEEL_CATEGORY,
		LENGTH,
		COUNT,
		WEIGHT,
		TOTAL_PRICE,
		STATE
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" parameterType="com.sp.net.entity.OrderDetail">

		<selectKey keyProperty="did" resultType="String" order="BEFORE">  
	        select uuid() from dual  
	    </selectKey>
		
		INSERT INTO <include refid="table" /> (
			D_ID,
        	O_ID ,
        	S_ID ,
        	DIAMETRE ,
        	PRICE ,
        	STEEL_CATEGORY ,
        	LENGTH ,
        	COUNT ,
        	WEIGHT ,
        	TOTAL_PRICE ,
        	STATE 
        ) VALUES (
        	#{did,jdbcType=VARCHAR},
			#{oid,jdbcType=VARCHAR},
			#{sid,jdbcType=VARCHAR},
			#{diametre,jdbcType=DOUBLE},
			#{price,jdbcType=DOUBLE},
			#{steelCategory,jdbcType=VARCHAR},
			#{length,jdbcType=DOUBLE},
			#{count,jdbcType=INTEGER},
			#{weight,jdbcType=DOUBLE},
			#{totalPrice,jdbcType=DOUBLE},
			#{state,jdbcType=VARCHAR}
        )
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" parameterType="list">

		<selectKey keyProperty="did" resultType="String" order="BEFORE">  
	        select uuid() from dual  
	    </selectKey>

		INSERT INTO <include refid="table" /> (
			D_ID,
        	O_ID ,
        	S_ID ,
        	DIAMETRE ,
        	PRICE ,
        	STEEL_CATEGORY ,
        	LENGTH ,
        	COUNT ,
        	WEIGHT ,
        	TOTAL_PRICE ,
        	STATE 
        ) VALUES 
		<foreach collection="list" item="item" separator=",">
			(
			#{item.did,jdbcType=VARCHAR},
			#{item.oid,jdbcType=VARCHAR},
			#{item.sid,jdbcType=VARCHAR},
			#{item.diametre,jdbcType=DOUBLE},
			#{item.price,jdbcType=DOUBLE},
			#{item.steelCategory,jdbcType=VARCHAR},
			#{item.length,jdbcType=DOUBLE},
			#{item.count,jdbcType=INTEGER},
			#{item.weight,jdbcType=DOUBLE},
			#{item.totalPrice,jdbcType=DOUBLE},
			#{item.state,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<!--更新-->
	<update id="update" parameterType="com.sp.net.entity.OrderDetail">
        UPDATE <include refid="table" /> SET
			O_ID = #{oid,jdbcType=VARCHAR},
			S_ID = #{sid,jdbcType=VARCHAR},
			DIAMETRE = #{diametre,jdbcType=DOUBLE},
			PRICE = #{price,jdbcType=DOUBLE},
			STEEL_CATEGORY = #{steelCategory,jdbcType=VARCHAR},
			LENGTH = #{length,jdbcType=DOUBLE},
			COUNT = #{count,jdbcType=INTEGER},
			WEIGHT = #{weight,jdbcType=DOUBLE},
			TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE},
			STATE = #{state,jdbcType=VARCHAR}
         WHERE D_ID = #{did,jdbcType=VARCHAR}
	</update>

	<!-- 只更新不为null的属性 -->
	<update id="updateIfNotNull" parameterType="com.sp.net.entity.OrderDetail">
		UPDATE <include refid="table" />
		<set>
			<if test="oid != null">
				O_ID =#{oid,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				S_ID =#{sid,jdbcType=VARCHAR},
			</if>
			<if test="diametre != null">
				DIAMETRE =#{diametre,jdbcType=DOUBLE},
			</if>
			<if test="price != null">
				PRICE =#{price,jdbcType=DOUBLE},
			</if>
			<if test="steelCategory != null">
				STEEL_CATEGORY =#{steelCategory,jdbcType=VARCHAR},
			</if>
			<if test="length != null">
				LENGTH =#{length,jdbcType=DOUBLE},
			</if>
			<if test="count != null">
				COUNT =#{count,jdbcType=INTEGER},
			</if>
			<if test="weight != null">
				WEIGHT =#{weight,jdbcType=DOUBLE},
			</if>
			<if test="totalPrice != null">
				TOTAL_PRICE =#{totalPrice,jdbcType=DOUBLE},
			</if>
			<if test="state != null">
				STATE =#{state,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE D_ID = #{did,jdbcType=VARCHAR}
	</update>
	
	<!-- 不分页查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<include refid="limit_sql" />
	</select>
	
	<!-- 分页查询时计算总记录数 -->
	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 根据id查询 -->
    <select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> 
		FROM <include refid="table" /> 
		WHERE D_ID = #{did,jdbcType=VARCHAR}  
	</select>

	<!--按id主键删除-->
	<update id="deleteById">
        <!--DELETE FROM <include refid="table" /> WHERE D_ID = #{did,jdbcType=VARCHAR}-->
		UPDATE <include refid="table" /> SET STATE = 0 WHERE D_ID = #{did,jdbcType=VARCHAR}  
	</update>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->

	<sql id="condition_sql">
		<if test="did != null and did !=''">
			and D_ID = #{did,jdbcType=VARCHAR}
		</if>
		<if test="oid != null and oid !=''">
			and O_ID = #{oid,jdbcType=VARCHAR}
		</if>
		<if test="sid != null and sid !=''">
			and S_ID = #{sid,jdbcType=VARCHAR}
		</if>
		<if test="diametre != null">
			and DIAMETRE = #{diametre,jdbcType=DOUBLE}
		</if>
		<if test="price != null">
			and PRICE = #{price,jdbcType=DOUBLE}
		</if>
		<if test="steelCategory != null and steelCategory !=''">
			and STEEL_CATEGORY = #{steelCategory,jdbcType=VARCHAR}
		</if>
		<if test="length != null">
			and LENGTH = #{length,jdbcType=DOUBLE}
		</if>
		<if test="count != null">
			and COUNT = #{count,jdbcType=INTEGER}
		</if>
		<if test="weight != null">
			and WEIGHT = #{weight,jdbcType=DOUBLE}
		</if>
		<if test="totalPrice != null">
			and TOTAL_PRICE = #{totalPrice,jdbcType=DOUBLE}
		</if>
		<if test="state != null and state !=''">
			and STATE = #{state,jdbcType=VARCHAR}
		</if>
	</sql>

	<sql id="limit_sql">
		<if test="pageIndex != null and pageSize != null">
			LIMIT #{pageIndex},#{pageSize}
		</if>
	</sql>
	
</mapper>

