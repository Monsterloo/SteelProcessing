<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sp.net.dao.impl.ProductDaoImpl">
	<sql id="table"> tb_product </sql>

	<!-- 用于返回的bean对象 -->
	<resultMap id="BaseResultMap" type="com.sp.net.entity.Product">
		<result column="P_ID" property="pid" jdbcType="VARCHAR"/>
		<result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR"/>
		<result column="IMAGE_URL" property="imageUrl" jdbcType="VARCHAR"/>
		<result column="PRICE" property="price" jdbcType="DOUBLE"/>
		<result column="M_ID" property="mid" jdbcType="VARCHAR"/>
		<result column="MATERIAL_COUNT" property="materialCount" jdbcType="INTEGER"/>
		<result column="STATE" property="state" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
		P_ID,
		PRODUCT_NAME,
		IMAGE_URL,
		PRICE,
		M_ID,
		MATERIAL_COUNT,
		STATE
	</sql>

	<!-- 插入记录 -->
	<insert id="insert" parameterType="com.sp.net.entity.Product">

		<selectKey keyProperty="pid" resultType="String" order="BEFORE">  
	        select replace(uuid(),'-','') from dual  
	    </selectKey>
		
		INSERT INTO <include refid="table" /> (
			P_ID,
        	PRODUCT_NAME ,
        	IMAGE_URL ,
        	PRICE ,
        	M_ID ,
        	MATERIAL_COUNT ,
        	STATE 
        ) VALUES (
        	#{pid,jdbcType=VARCHAR},
			#{productName,jdbcType=VARCHAR},
			#{imageUrl,jdbcType=VARCHAR},
			#{price,jdbcType=DOUBLE},
			#{mid,jdbcType=VARCHAR},
			#{materialCount,jdbcType=INTEGER},
			#{state,jdbcType=VARCHAR}
        )
	</insert>

	<!-- 批量插入记录 -->
	<insert id="batchInsert" parameterType="list">

		<selectKey keyProperty="pid" resultType="String" order="BEFORE">  
	        select replace(uuid(),'-','') from dual  
	    </selectKey>

		INSERT INTO <include refid="table" /> (
			P_ID,
        	PRODUCT_NAME ,
        	IMAGE_URL ,
        	PRICE ,
        	M_ID ,
        	MATERIAL_COUNT ,
        	STATE 
        ) VALUES 
		<foreach collection="list" item="item" separator=",">
			(
			#{item.pid,jdbcType=VARCHAR},
			#{item.productName,jdbcType=VARCHAR},
			#{item.imageUrl,jdbcType=VARCHAR},
			#{item.price,jdbcType=DOUBLE},
			#{item.mid,jdbcType=VARCHAR},
			#{item.materialCount,jdbcType=INTEGER},
			#{item.state,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<!--更新-->
	<update id="update" parameterType="com.sp.net.entity.Product">
        UPDATE <include refid="table" /> SET
			PRODUCT_NAME = #{productName,jdbcType=VARCHAR},
			IMAGE_URL = #{imageUrl,jdbcType=VARCHAR},
			PRICE = #{price,jdbcType=DOUBLE},
			M_ID = #{mid,jdbcType=VARCHAR},
			MATERIAL_COUNT = #{materialCount,jdbcType=INTEGER},
			STATE = #{state,jdbcType=VARCHAR}
         WHERE P_ID = #{pid,jdbcType=VARCHAR}
	</update>

	<!-- 只更新不为null的属性 -->
	<update id="updateIfNotNull" parameterType="com.sp.net.entity.Product">
		UPDATE <include refid="table" />
		<set>
			<if test="productName != null">
				PRODUCT_NAME =#{productName,jdbcType=VARCHAR},
			</if>
			<if test="imageUrl != null">
				IMAGE_URL =#{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				PRICE =#{price,jdbcType=DOUBLE},
			</if>
			<if test="mid != null">
				M_ID =#{mid,jdbcType=VARCHAR},
			</if>
			<if test="materialCount != null">
				MATERIAL_COUNT =#{materialCount,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				STATE =#{state,jdbcType=VARCHAR},
			</if>
		</set>
		WHERE P_ID = #{pid,jdbcType=VARCHAR}
	</update>
	
	<!-- 不分页查询 -->
	<select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>
	
	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
		<include refid="limit_sql" />
	</select>
	
	<!-- 分页查询时计算总记录数 -->
	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="table" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<!-- 根据id查询 -->
    <select id="getById" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> 
		FROM <include refid="table" /> 
		WHERE P_ID = #{pid,jdbcType=VARCHAR}  
	</select>

	<!--按id主键删除-->
	<update id="deleteById">
        <!--DELETE FROM <include refid="table" /> WHERE P_ID = #{pid,jdbcType=VARCHAR}-->
		UPDATE <include refid="table" /> SET STATE = 0 WHERE P_ID = #{pid,jdbcType=VARCHAR}  
	</update>

	<!-- ↑↑↑↑↑↑ 如果有新增字段、删除字段、修改字段 以上内容可用模板生成新内容后直接替换 ↑↑↑↑↑↑ -->
	<!-- ↓↓↓↓↓↓ 以下内容是根据需求手动添加或修改的，请勿使用模板内容直接覆盖 ↓↓↓↓↓↓ -->

	<sql id="condition_sql">
		<if test="pid != null and pid !=''">
			and P_ID = #{pid,jdbcType=VARCHAR}
		</if>
		<if test="productName != null and productName !=''">
			and PRODUCT_NAME = #{productName,jdbcType=VARCHAR}
		</if>
		<if test="imageUrl != null and imageUrl !=''">
			and IMAGE_URL = #{imageUrl,jdbcType=VARCHAR}
		</if>
		<if test="price != null">
			and PRICE = #{price,jdbcType=DOUBLE}
		</if>
		<if test="mid != null and mid !=''">
			and M_ID = #{mid,jdbcType=VARCHAR}
		</if>
		<if test="materialCount != null">
			and MATERIAL_COUNT = #{materialCount,jdbcType=INTEGER}
		</if>
		<if test="state != null and state !=''">
			and STATE = #{state,jdbcType=VARCHAR}
		</if>
	</sql>

	<sql id="limit_sql">
		<if test="pageIndex != null and pageSize != null">
			LIMIT #{pageIndex},#{pageSize}
		</if>
	</sql>
	
</mapper>

